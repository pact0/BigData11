[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Kuba\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Kuba\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 11.0.15)
[debug]       Load.loadUnit: plugins took 45.72ms
[debug]       Load.loadUnit: defsScala took 0.1466ms
[debug] [Loading] Scanning directory C:\Users\Kuba\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Kuba\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.1798 ms
[debug]           Load.resolveProject(global-plugins) took 24.5262ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Kuba\.sbt\1.0\plugins, plugins: List(<none>))) took 46.2185ms
[debug] [Loading] Done in C:\Users\Kuba\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 56.8075ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1134ms
[debug]     Load.loadUnit(file:/C:/Users/Kuba/.sbt/1.0/plugins/, ...) took 106.9472ms
[debug]   Load.apply: load took 192.8561ms
[debug]   Load.apply: resolveProjects took 3.2557ms
[debug]   Load.apply: finalTransforms took 36.9901ms
[debug]   Load.apply: config.delegates took 7.2831ms
[debug]   Load.apply: Def.make(settings)... took 272.207ms
[debug]   Load.apply: structureIndex took 70.1974ms
[debug]   Load.apply: mkStreams took 2.2038ms
[info] loading global plugins from C:\Users\Kuba\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1557.4475ms
[debug]           Load.loadUnit: plugins took 12.2231ms
[debug]           Load.loadUnit: defsScala took 0.0073ms
[debug] [Loading] Scanning directory C:\Users\Kuba\IdeaProjects\untitled\project
[debug]             Load.loadUnit: mkEval took 3.4464ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Kuba\IdeaProjects\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.034 ms
[info] loading settings for project untitled-build from idea1.sbt ...
[debug]               Load.resolveProject(untitled-build) took 1.3065ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: C:\Users\Kuba\IdeaProjects\untitled\project, plugins: List(<none>))) took 2.6022ms
[debug] [Loading] Done in C:\Users\Kuba\IdeaProjects\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 67.5618ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.7627ms
[debug]         Load.loadUnit(file:/C:/Users/Kuba/IdeaProjects/untitled/project/, ...) took 82.1915ms
[debug]       Load.apply: load took 82.7886ms
[debug]       Load.apply: resolveProjects took 0.0487ms
[debug]       Load.apply: finalTransforms took 4.2211ms
[debug]       Load.apply: config.delegates took 0.9796ms
[debug]       Load.apply: Def.make(settings)... took 54.3874ms
[debug]       Load.apply: structureIndex took 12.4722ms
[debug]       Load.apply: mkStreams took 0.0017ms
[info] loading project definition from C:\Users\Kuba\IdeaProjects\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 270.9229ms
[debug]     Load.loadUnit: defsScala took 0.0016ms
[debug] [Loading] Scanning directory C:\Users\Kuba\IdeaProjects\untitled
[debug]       Load.loadUnit: mkEval took 0.1199ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6197 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 14.1364ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Kuba\IdeaProjects\untitled, plugins: List(<none>))) took 16.7096ms
[debug] [Loading] Done in C:\Users\Kuba\IdeaProjects\untitled, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1087.1961ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.2348ms
[debug]   Load.loadUnit(file:/C:/Users/Kuba/IdeaProjects/untitled/, ...) took 1359.6394ms
[debug] Load.apply: load took 1360.4093ms
[debug] Load.apply: resolveProjects took 0.0728ms
[debug] Load.apply: finalTransforms took 10.7892ms
[debug] Load.apply: config.delegates took 0.1981ms
[debug] Load.apply: Def.make(settings)... took 47.3799ms
[debug] Load.apply: structureIndex took 8.7715ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to untitled (in build file:/C:/Users/Kuba/IdeaProjects/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64865 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64865, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled (in build file:/C:/Users/Kuba/IdeaProjects/untitled/)
[debug] > Exec(idea-shell, None, None)
